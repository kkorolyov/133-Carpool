package dev.se133.project.schedule;

import dev.se133.project.commute.Address;
import dev.se133.project.commute.Time;
import dev.se133.project.member.Member;

/**
 * Outputs a carpool schedule generated by an appropriate scheduler matching specified parameters.
 */
public class ScheduleFactory {
	
	/**
	 * Returns an appropriate carpool schedule for the given context
	 * @param members all members to schedule
	 * @param start start point of schedule range
	 * @param end end point of schedule ranges
	 * @param preferences optional additional scheduling preferences
	 * @param driverPref if {@code true} preferences are treated as "driver choose passengers", else, preferences are treated as "passenger choose driver"
	 * @return appropriate carpool schedule
	 */
	public static CarpoolSchedule schedule(Member[] members, Time start, Time end, Address destination, SchedulingPreference preferences, boolean driverPref) {
		return selectScheduler(members, start, end, destination, preferences, driverPref).schedule();
	}
	private static CarpoolScheduler selectScheduler(Member[] members, Time start, Time end, Address destination, SchedulingPreference preferences, boolean driverPref) {
		if (preferences == null)
			return new BasicCarpoolScheduler(members, start, end, destination, preferences);
		
		else if (driverPref)
				return new DriverPreferenceCarpoolScheduler(members, start, end, destination, preferences);
		
		else
				return new PassengerPreferenceCarpoolScheduler(members, start, end, destination, preferences);
	}
}
